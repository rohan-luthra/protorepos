// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/proto/tax.proto

package restaurants

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OrderType int32

const (
	OrderType_DINEIN      OrderType = 0
	OrderType_TAKEAWAY    OrderType = 1
	OrderType_AGGREGATORS OrderType = 2
	OrderType_QSR         OrderType = 3
)

var OrderType_name = map[int32]string{
	0: "DINEIN",
	1: "TAKEAWAY",
	2: "AGGREGATORS",
	3: "QSR",
}

var OrderType_value = map[string]int32{
	"DINEIN":      0,
	"TAKEAWAY":    1,
	"AGGREGATORS": 2,
	"QSR":         3,
}

func (x OrderType) String() string {
	return proto.EnumName(OrderType_name, int32(x))
}

func (OrderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_449a31bf9aec8373, []int{0}
}

type Tax struct {
	XId                  string   `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Inclusice            bool     `protobuf:"varint,3,opt,name=inclusice,proto3" json:"inclusice,omitempty"`
	IsPercentage         bool     `protobuf:"varint,4,opt,name=is_percentage,json=isPercentage,proto3" json:"is_percentage,omitempty"`
	Value                float32  `protobuf:"fixed32,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tax) Reset()         { *m = Tax{} }
func (m *Tax) String() string { return proto.CompactTextString(m) }
func (*Tax) ProtoMessage()    {}
func (*Tax) Descriptor() ([]byte, []int) {
	return fileDescriptor_449a31bf9aec8373, []int{0}
}

func (m *Tax) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tax.Unmarshal(m, b)
}
func (m *Tax) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tax.Marshal(b, m, deterministic)
}
func (m *Tax) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tax.Merge(m, src)
}
func (m *Tax) XXX_Size() int {
	return xxx_messageInfo_Tax.Size(m)
}
func (m *Tax) XXX_DiscardUnknown() {
	xxx_messageInfo_Tax.DiscardUnknown(m)
}

var xxx_messageInfo_Tax proto.InternalMessageInfo

func (m *Tax) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *Tax) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tax) GetInclusice() bool {
	if m != nil {
		return m.Inclusice
	}
	return false
}

func (m *Tax) GetIsPercentage() bool {
	if m != nil {
		return m.IsPercentage
	}
	return false
}

func (m *Tax) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterEnum("restaurants.OrderType", OrderType_name, OrderType_value)
	proto.RegisterType((*Tax)(nil), "restaurants.Tax")
}

func init() {
	proto.RegisterFile("src/proto/tax.proto", fileDescriptor_449a31bf9aec8373)
}

var fileDescriptor_449a31bf9aec8373 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0xcf, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x71, 0xd3, 0x6c, 0x73, 0x7d, 0x9b, 0xac, 0x3c, 0x3d, 0xe4, 0xe0, 0xa1, 0xe8, 0xa5,
	0x78, 0x70, 0x07, 0xff, 0x00, 0x09, 0x58, 0x4a, 0x11, 0x36, 0xcd, 0x0a, 0xe2, 0x69, 0xc4, 0xf6,
	0x21, 0x81, 0x99, 0x95, 0x24, 0x95, 0x7a, 0xf6, 0x1f, 0x17, 0x22, 0xe8, 0xed, 0xfb, 0x3e, 0xbc,
	0xcb, 0x0f, 0xce, 0xbd, 0x6b, 0xd7, 0xbd, 0x3b, 0x86, 0xe3, 0x3a, 0xe8, 0xf1, 0x36, 0x16, 0x2e,
	0x1c, 0xf9, 0xa0, 0x07, 0xa7, 0x6d, 0xf0, 0x57, 0xdf, 0x0c, 0x78, 0xa3, 0x47, 0x5c, 0x01, 0xdf,
	0x9b, 0x4e, 0xb0, 0x9c, 0x15, 0xa9, 0x4a, 0xea, 0x0e, 0x11, 0x26, 0x56, 0x7f, 0x90, 0x48, 0xa2,
	0xc4, 0xc6, 0x4b, 0x48, 0x8d, 0x6d, 0x0f, 0x83, 0x37, 0x2d, 0x09, 0x9e, 0xb3, 0x62, 0xae, 0xfe,
	0x01, 0xaf, 0xe1, 0xcc, 0xf8, 0x7d, 0x4f, 0xae, 0x25, 0x1b, 0xf4, 0x3b, 0x89, 0x49, 0xfc, 0x58,
	0x1a, 0xff, 0xf4, 0x67, 0x78, 0x01, 0xd3, 0x4f, 0x7d, 0x18, 0x48, 0x4c, 0x73, 0x56, 0x24, 0xea,
	0xf7, 0xb8, 0xb9, 0x87, 0x74, 0xeb, 0x3a, 0x72, 0xcd, 0x57, 0x4f, 0x08, 0x30, 0x7b, 0xa8, 0x37,
	0x65, 0xbd, 0xc9, 0x4e, 0x70, 0x09, 0xf3, 0x46, 0x3e, 0x96, 0xf2, 0x45, 0xbe, 0x66, 0x0c, 0x57,
	0xb0, 0x90, 0x55, 0xa5, 0xca, 0x4a, 0x36, 0x5b, 0xb5, 0xcb, 0x12, 0x3c, 0x05, 0xfe, 0xbc, 0x53,
	0x19, 0x7f, 0x9b, 0xc5, 0x69, 0x77, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x78, 0x6d, 0xd1, 0x4f,
	0xf1, 0x00, 0x00, 0x00,
}
