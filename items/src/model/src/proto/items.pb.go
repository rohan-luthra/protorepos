// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/proto/items.proto

package items

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Timings int32

const (
	Timings_BREAKFAST Timings = 0
	Timings_LUNCH     Timings = 1
	Timings_SNACKS    Timings = 2
	Timings_DINNER    Timings = 3
)

var Timings_name = map[int32]string{
	0: "BREAKFAST",
	1: "LUNCH",
	2: "SNACKS",
	3: "DINNER",
}

var Timings_value = map[string]int32{
	"BREAKFAST": 0,
	"LUNCH":     1,
	"SNACKS":    2,
	"DINNER":    3,
}

func (x Timings) String() string {
	return proto.EnumName(Timings_name, int32(x))
}

func (Timings) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_71497268192335bf, []int{0}
}

type SpecialCategory int32

const (
	SpecialCategory_CHEFS_SPECIAL  SpecialCategory = 0
	SpecialCategory_TODAYS_SPECIAL SpecialCategory = 1
)

var SpecialCategory_name = map[int32]string{
	0: "CHEFS_SPECIAL",
	1: "TODAYS_SPECIAL",
}

var SpecialCategory_value = map[string]int32{
	"CHEFS_SPECIAL":  0,
	"TODAYS_SPECIAL": 1,
}

func (x SpecialCategory) String() string {
	return proto.EnumName(SpecialCategory_name, int32(x))
}

func (SpecialCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_71497268192335bf, []int{1}
}

type Items struct {
	// TODO: add multiple language to name & description
	XId                  string            `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price                float32           `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	Ratings              float32           `protobuf:"fixed32,5,opt,name=ratings,proto3" json:"ratings,omitempty"`
	RatingsCount         int32             `protobuf:"varint,6,opt,name=ratings_count,json=ratingsCount,proto3" json:"ratings_count,omitempty"`
	OrderCount           int32             `protobuf:"varint,7,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`
	CategoryId           string            `protobuf:"bytes,8,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	SubCategoryId        string            `protobuf:"bytes,9,opt,name=sub_category_id,json=subCategoryId,proto3" json:"sub_category_id,omitempty"`
	SplCategories        []SpecialCategory `protobuf:"varint,10,rep,packed,name=spl_categories,json=splCategories,proto3,enum=items.SpecialCategory" json:"spl_categories,omitempty"`
	Tags                 []string          `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	Images               []string          `protobuf:"bytes,12,rep,name=images,proto3" json:"images,omitempty"`
	Timings              []Timings         `protobuf:"varint,13,rep,packed,name=timings,proto3,enum=items.Timings" json:"timings,omitempty"`
	Priority             int32             `protobuf:"varint,14,opt,name=priority,proto3" json:"priority,omitempty"`
	Available            bool              `protobuf:"varint,15,opt,name=available,proto3" json:"available,omitempty"`
	Veg                  bool              `protobuf:"varint,16,opt,name=veg,proto3" json:"veg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Items) Reset()         { *m = Items{} }
func (m *Items) String() string { return proto.CompactTextString(m) }
func (*Items) ProtoMessage()    {}
func (*Items) Descriptor() ([]byte, []int) {
	return fileDescriptor_71497268192335bf, []int{0}
}

func (m *Items) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Items.Unmarshal(m, b)
}
func (m *Items) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Items.Marshal(b, m, deterministic)
}
func (m *Items) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Items.Merge(m, src)
}
func (m *Items) XXX_Size() int {
	return xxx_messageInfo_Items.Size(m)
}
func (m *Items) XXX_DiscardUnknown() {
	xxx_messageInfo_Items.DiscardUnknown(m)
}

var xxx_messageInfo_Items proto.InternalMessageInfo

func (m *Items) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *Items) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Items) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Items) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Items) GetRatings() float32 {
	if m != nil {
		return m.Ratings
	}
	return 0
}

func (m *Items) GetRatingsCount() int32 {
	if m != nil {
		return m.RatingsCount
	}
	return 0
}

func (m *Items) GetOrderCount() int32 {
	if m != nil {
		return m.OrderCount
	}
	return 0
}

func (m *Items) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

func (m *Items) GetSubCategoryId() string {
	if m != nil {
		return m.SubCategoryId
	}
	return ""
}

func (m *Items) GetSplCategories() []SpecialCategory {
	if m != nil {
		return m.SplCategories
	}
	return nil
}

func (m *Items) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Items) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *Items) GetTimings() []Timings {
	if m != nil {
		return m.Timings
	}
	return nil
}

func (m *Items) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Items) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func (m *Items) GetVeg() bool {
	if m != nil {
		return m.Veg
	}
	return false
}

func init() {
	proto.RegisterEnum("items.Timings", Timings_name, Timings_value)
	proto.RegisterEnum("items.SpecialCategory", SpecialCategory_name, SpecialCategory_value)
	proto.RegisterType((*Items)(nil), "items.Items")
}

func init() { proto.RegisterFile("src/proto/items.proto", fileDescriptor_71497268192335bf) }

var fileDescriptor_71497268192335bf = []byte{
	// 422 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0xd1, 0x6b, 0x9b, 0x50,
	0x14, 0xc6, 0x6b, 0xac, 0x49, 0x3c, 0xa9, 0xc6, 0x1d, 0xb6, 0x72, 0x19, 0x83, 0xc9, 0x06, 0x43,
	0xfa, 0xd0, 0xc2, 0xf6, 0x32, 0x18, 0x7b, 0x70, 0x36, 0xa5, 0xd2, 0x92, 0x0d, 0xcd, 0x1e, 0xf6,
	0x14, 0x6e, 0xf4, 0x22, 0x17, 0x12, 0x95, 0x7b, 0x6f, 0x0a, 0xfd, 0xa7, 0xf7, 0x37, 0x0c, 0x4f,
	0xb4, 0x09, 0x7b, 0xfb, 0xbe, 0xdf, 0xf9, 0xf4, 0x78, 0x3e, 0x84, 0x37, 0x5a, 0x15, 0x37, 0xad,
	0x6a, 0x4c, 0x73, 0x23, 0x8d, 0xd8, 0xe9, 0x6b, 0xd2, 0xe8, 0x90, 0xf9, 0xf0, 0xd7, 0x06, 0x27,
	0xed, 0x14, 0xce, 0xc1, 0x5e, 0xcb, 0x92, 0x59, 0xa1, 0x15, 0xb9, 0xd9, 0x28, 0x2d, 0x11, 0xe1,
	0xbc, 0xe6, 0x3b, 0xc1, 0x46, 0x44, 0x48, 0x63, 0x08, 0xb3, 0x52, 0xe8, 0x42, 0xc9, 0xd6, 0xc8,
	0xa6, 0x66, 0x36, 0x8d, 0x4e, 0x11, 0xbe, 0x06, 0xa7, 0x55, 0xb2, 0x10, 0xec, 0x3c, 0xb4, 0xa2,
	0x51, 0x76, 0x30, 0xc8, 0x60, 0xa2, 0xb8, 0x91, 0x75, 0xa5, 0x99, 0x43, 0x7c, 0xb0, 0xf8, 0x11,
	0xbc, 0x5e, 0xae, 0x8b, 0x66, 0x5f, 0x1b, 0x36, 0x0e, 0xad, 0xc8, 0xc9, 0x2e, 0x7a, 0x98, 0x74,
	0x0c, 0xdf, 0xc3, 0xac, 0x51, 0xa5, 0x50, 0x7d, 0x64, 0x42, 0x11, 0x20, 0xf4, 0x12, 0x28, 0xb8,
	0x11, 0x55, 0xa3, 0x9e, 0xbb, 0x23, 0xa6, 0xf4, 0x5d, 0x30, 0xa0, 0xb4, 0xc4, 0x4f, 0x30, 0xd7,
	0xfb, 0xcd, 0xfa, 0x34, 0xe4, 0x52, 0xc8, 0xd3, 0xfb, 0x4d, 0x72, 0xcc, 0x7d, 0x07, 0x5f, 0xb7,
	0xdb, 0x21, 0x27, 0x85, 0x66, 0x10, 0xda, 0x91, 0xff, 0xf9, 0xf2, 0xfa, 0x50, 0x5e, 0xde, 0x8a,
	0x42, 0xf2, 0xed, 0xf0, 0x44, 0xe6, 0xe9, 0x76, 0x30, 0x52, 0xe8, 0xae, 0x33, 0xc3, 0x2b, 0xcd,
	0x66, 0xa1, 0xdd, 0x75, 0xd6, 0x69, 0xbc, 0x84, 0xb1, 0xdc, 0xf1, 0x4a, 0x68, 0x76, 0x41, 0xb4,
	0x77, 0x18, 0xc1, 0xc4, 0xc8, 0x1d, 0x75, 0xe2, 0xd1, 0x0e, 0xbf, 0xdf, 0xb1, 0x3a, 0xd0, 0x6c,
	0x18, 0xe3, 0x5b, 0x98, 0xb6, 0x4a, 0x36, 0x4a, 0x9a, 0x67, 0xe6, 0xd3, 0xed, 0x2f, 0x1e, 0xdf,
	0x81, 0xcb, 0x9f, 0xb8, 0xdc, 0xf2, 0xcd, 0x56, 0xb0, 0x79, 0x68, 0x45, 0xd3, 0xec, 0x08, 0x30,
	0x00, 0xfb, 0x49, 0x54, 0x2c, 0x20, 0xde, 0xc9, 0xab, 0x6f, 0x30, 0xe9, 0xdf, 0x8f, 0x1e, 0xb8,
	0x3f, 0xb2, 0x45, 0xfc, 0x70, 0x17, 0xe7, 0xab, 0xe0, 0x0c, 0x5d, 0x70, 0x1e, 0x7f, 0x2f, 0x93,
	0xfb, 0xc0, 0x42, 0x80, 0x71, 0xbe, 0x8c, 0x93, 0x87, 0x3c, 0x18, 0x75, 0xfa, 0x36, 0x5d, 0x2e,
	0x17, 0x59, 0x60, 0x5f, 0x7d, 0x85, 0xf9, 0x7f, 0x05, 0xe0, 0x2b, 0xf0, 0x92, 0xfb, 0xc5, 0x5d,
	0xbe, 0xce, 0x7f, 0x2d, 0x92, 0x34, 0x7e, 0x0c, 0xce, 0x10, 0xc1, 0x5f, 0xfd, 0xbc, 0x8d, 0xff,
	0x1c, 0x99, 0xb5, 0x19, 0xd3, 0x5f, 0xf7, 0xe5, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x95, 0xc0,
	0xd4, 0xa3, 0x8e, 0x02, 0x00, 0x00,
}
